---
- name: Check binaries for kube
  tags: ["kube"]
  command: |
    kube_path={{ .work_dir }}/kubekey/kube/{{ .kube_version }}/{{ .item }}
    if [ ! -f $kube_path/kubelet ]; then
        mkdir -p $kube_path
        # download online
        http_code=$(curl -Lo /dev/null -s -w "%{http_code}" {{ get .artifact.artifact_url.kubelet .item }})
        if [ $http_code != 200 ]; then
          echo "http code is $http_code"
          exit 1
        fi
        curl -L -o $kube_path/kubelet {{ get .artifact.artifact_url.kubelet .item }}
    fi
    if [ ! -f $kube_path/kubeadm ]; then
        mkdir -p $kube_path
        # download online
        http_code=$(curl -Lo /dev/null -s -w "%{http_code}" {{ get .artifact.artifact_url.kubeadm .item }})
        if [ $http_code != 200 ]; then
          echo "http code is $http_code"
          exit 1
        fi
        curl -L -o $kube_path/kubeadm {{ get .artifact.artifact_url.kubeadm .item }}
    fi
    if [ ! -f $kube_path/kubectl ]; then
        mkdir -p $kube_path
        # download online
        http_code=$(curl -Lo /dev/null -s -w "%{http_code}" {{ get .artifact.artifact_url.kubectl .item }})
        if [ $http_code != 200 ]; then
          echo "http code is $http_code"
          exit 1
        fi
        curl -L -o $kube_path/kubectl {{ get .artifact.artifact_url.kubectl .item }}
    fi
  loop: "{{ .artifact.arch | toJson }}"
  when: and .kube_version (ne .kube_version "")